--анонимный блок и логирование в самом низу

--заполнение данных за 31-12-2017, согласно ТЗ
INSERT INTO
	DM.DM_ACCOUNT_BALANCE_F
SELECT DISTINCT
	FT."ON_DATE",
	FT."ACCOUNT_RK",
	FT."BALANCE_OUT",
	COALESCE(
		FT."BALANCE_OUT" * EXC."REDUCED_COURCE",
		FT."BALANCE_OUT" * 1
	)
FROM
	DS.FT_BALANCE_F AS FT
	LEFT JOIN DS.MD_EXCHANGE_RATE_D AS EXC ON FT."CURRENCY_RK" = EXC."CURRENCY_RK"
	AND '2017-12-31' BETWEEN EXC."DATA_ACTUAL_DATE" AND EXC."DATA_ACTUAL_END_DATE"
WHERE
	FT."ON_DATE" = '2017-12-31';

--требуемая процедура
CREATE
OR REPLACE PROCEDURE DS.FILL_ACCOUNT_BALANCE_F (I_ONDATE DATE) AS $$
begin
INSERT INTO DM.DM_ACCOUNT_BALANCE_F
SELECT DISTINCT
	I_ONDATE,
	ACC_B.ACCOUNT_RK,
	CASE
		WHEN ACC."CHAR_TYPE" = 'П' THEN COALESCE(ACC_B_LD.BALANCE_OUT, 0) + COALESCE(ACC_TUR.CREDIT_AMOUNT, 0) - COALESCE(ACC_TUR.DEBET_AMOUNT, 0)
		WHEN ACC."CHAR_TYPE" = 'А' THEN COALESCE(ACC_B_LD.BALANCE_OUT, 0) + COALESCE(ACC_TUR.DEBET_AMOUNT, 0) - COALESCE(ACC_TUR.CREDIT_AMOUNT, 0)
		ELSE ACC_B_LD.BALANCE_OUT
	END AS NEW_BALANCE,
	CASE
		WHEN ACC."CHAR_TYPE" = 'П' THEN COALESCE(
			(
				COALESCE(ACC_B_LD.BALANCE_OUT, 0) + COALESCE(ACC_TUR.CREDIT_AMOUNT, 0) - COALESCE(ACC_TUR.DEBET_AMOUNT, 0)
			) * EXC."REDUCED_COURCE",
			(
				COALESCE(ACC_B_LD.BALANCE_OUT, 0) + COALESCE(ACC_TUR.CREDIT_AMOUNT, 0) - COALESCE(ACC_TUR.DEBET_AMOUNT, 0)
			) * 1
		)
		WHEN ACC."CHAR_TYPE" = 'А' THEN COALESCE(
			(
				COALESCE(ACC_B_LD.BALANCE_OUT, 0) + COALESCE(ACC_TUR.DEBET_AMOUNT, 0) - COALESCE(ACC_TUR.CREDIT_AMOUNT, 0)
			) * EXC."REDUCED_COURCE",
			(
				COALESCE(ACC_B_LD.BALANCE_OUT, 0) + COALESCE(ACC_TUR.DEBET_AMOUNT, 0) - COALESCE(ACC_TUR.CREDIT_AMOUNT, 0)
			) * 1
		)
		ELSE ACC_B_LD.BALANCE_OUT_RUB
	END AS NEW_BALANCE_RUB
FROM
	DM.DM_ACCOUNT_BALANCE_F AS ACC_B
	JOIN DS.MD_ACCOUNT_D AS ACC ON ACC_B.ACCOUNT_RK = ACC."ACCOUNT_RK"
	AND I_ONDATE BETWEEN ACC."DATA_ACTUAL_DATE" AND ACC."DATA_ACTUAL_END_DATE"
	LEFT JOIN DS.MD_EXCHANGE_RATE_D AS EXC ON ACC."CURRENCY_RK" = EXC."CURRENCY_RK"
	AND I_ONDATE BETWEEN EXC."DATA_ACTUAL_DATE" AND EXC."DATA_ACTUAL_END_DATE"
	LEFT JOIN DM.DM_ACCOUNT_BALANCE_F AS ACC_B_LD ON ACC_B.ACCOUNT_RK = ACC_B_LD.ACCOUNT_RK
	AND ACC_B_LD.ON_DATE = (I_ONDATE - INTERVAL '1 day')
	LEFT JOIN DM.DM_ACCOUNT_TURNOVER_F AS ACC_TUR ON ACC_TUR.ACCOUNT_RK = ACC_B.ACCOUNT_RK
	AND I_ONDATE = ACC_TUR.ON_DATE;		end ;
 $$ LANGUAGE PLPGSQL;

 --анонимный блок для заполнения данных за январь + логирование
DO $$
declare 
my_date date := '01-01-2018'; 
begin
insert into logs.logs_ds
(etl_table, date_start, operation_status)
values ('DM_ACCOUNT_BALANCE_F',clock_timestamp()::TIME,8);
--проходит каждый день, заполняя процедуру и для наглядности выводит что данный день прошёл
for counter in 1..31 loop
call ds.fill_account_balance_f(my_date);
raise notice '%' ,my_date;
my_date = my_date + INTERVAL '1 day';
end loop;

UPDATE logs.logs_ds 
SET
DATE_END = NOW()::TIME,
OPERATION_STATUS = 0,
TIME_ETL = clock_timestamp()::TIME - DATE_START
WHERE
OPERATION_STATUS = 8;
end $$ LANGUAGE PLPGSQL;
